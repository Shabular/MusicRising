name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Ensure TestResults directory exists
        run: mkdir -p $GITHUB_WORKSPACE/TestResults

      - name: Run tests
        run: |
          echo "Running tests..."
          dotnet test --no-build --collect:"XPlat Code Coverage" --logger:"trx;LogFileName=$GITHUB_WORKSPACE/TestResults/test_results.trx" --results-directory $GITHUB_WORKSPACE/TestResults
          echo "Test run completed."
          if [ $? -ne 0 ]; then
            echo "Test runner failed"
            exit 1
          fi

      - name: Check if TestResults directory exists
        run: if [ -d "$GITHUB_WORKSPACE/TestResults" ]; then echo "TestResults directory exists"; else echo "TestResults directory does not exist"; fi

      - name: List TestResults directory
        run: ls -R $GITHUB_WORKSPACE/TestResults

      - name: Publish test results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: $GITHUB_WORKSPACE/TestResults/*.trx

      - name: Publish code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: $GITHUB_WORKSPACE/TestResults/coverage.cobertura.xml
          flags: unittests
          name: code-coverage
